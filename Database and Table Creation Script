-- =====================================================-- Banking System Database - Table Definitions-- SQL Server Implementation-- =====================================================-- Create the database
 CREATE DATABASE BankingSystem;
 GO
 USE BankingSystem;
GO-- =====================================================-- 1. CUSTOMERS TABLE-- =====================================================
 CREATE TABLE Customers (
    CustomerID INT IDENTITY(1,1) PRIMARY KEY,
    FirstName NVARCHAR(50) NOT NULL,
    LastName NVARCHAR(50) NOT NULL,
    DateOfBirth DATE NOT NULL,
    Email NVARCHAR(100) UNIQUE NOT NULL,
    PhoneNumber NVARCHAR(15) NOT NULL,
    Address NVARCHAR(200) NOT NULL,
    City NVARCHAR(50) NOT NULL,
    State NVARCHAR(50) NOT NULL,
    ZipCode NVARCHAR(10) NOT NULL,
    SSN NVARCHAR(11) UNIQUE NOT NULL,
    CreatedDate DATETIME2 DEFAULT GETDATE(),
    LastModified DATETIME2 DEFAULT GETDATE(),
    IsActive BIT DEFAULT 1
 );-- =====================================================-- 2. ACCOUNT TYPES TABLE-- =====================================================
 CREATE TABLE AccountTypes (
    AccountTypeID INT IDENTITY(1,1) PRIMARY KEY,
    TypeName NVARCHAR(50) NOT NULL UNIQUE,
    Description NVARCHAR(200),
    MinimumBalance DECIMAL(15,2) DEFAULT 0.00,
    InterestRate DECIMAL(5,4) DEFAULT 0.0000,
    IsActive BIT DEFAULT 1
 );-- =====================================================-- 3. ACCOUNTS TABLE-- =====================================================
 CREATE TABLE Accounts (
    AccountID INT IDENTITY(1,1) PRIMARY KEY,
    AccountNumber NVARCHAR(20) UNIQUE NOT NULL,
    CustomerID INT NOT NULL,
    AccountTypeID INT NOT NULL,
    Balance DECIMAL(15,2) DEFAULT 0.00,
    OpenDate DATETIME2 DEFAULT GETDATE(),
    LastTransactionDate DATETIME2,
    Status NVARCHAR(20) DEFAULT 'Active' CHECK (Status IN ('Active', 'Inactive', 'Frozen'
    CreatedDate DATETIME2 DEFAULT GETDATE(),
    LastModified DATETIME2 DEFAULT GETDATE(),
    FOREIGN KEY (CustomerID) REFERENCES Customers(CustomerID),
    FOREIGN KEY (AccountTypeID) REFERENCES AccountTypes(AccountTypeID)
 );-- =====================================================-- 4. TRANSACTION TYPES TABLE-- =====================================================
 CREATE TABLE TransactionTypes (
    TransactionTypeID INT IDENTITY(1,1) PRIMARY KEY,
    TypeName NVARCHAR(50) NOT NULL UNIQUE,
    Description NVARCHAR(200),
    IsDebit BIT NOT NULL,
    IsActive BIT DEFAULT 1
 );-- =====================================================-- 5. TRANSACTIONS TABLE-- =====================================================
 CREATE TABLE Transactions (
    TransactionID INT IDENTITY(1,1) PRIMARY KEY,
    TransactionNumber NVARCHAR(50) UNIQUE NOT NULL,
    FromAccountID INT,
    ToAccountID INT,
    TransactionTypeID INT NOT NULL,
    Amount DECIMAL(15,2) NOT NULL CHECK (Amount > 0),
    Description NVARCHAR(500),
    TransactionDate DATETIME2 DEFAULT GETDATE(),
    Status NVARCHAR(20) DEFAULT 'Completed' CHECK (Status IN ('Pending', 'Completed', 'Fa
    ProcessedBy NVARCHAR(50),
    CreatedDate DATETIME2 DEFAULT GETDATE(),
    FOREIGN KEY (FromAccountID) REFERENCES Accounts(AccountID),
    FOREIGN KEY (ToAccountID) REFERENCES Accounts(AccountID),
    FOREIGN KEY (TransactionTypeID) REFERENCES TransactionTypes(TransactionTypeID)
 );-- =====================================================-- 6. AUDIT LOG TABLE-- =====================================================
 CREATE TABLE AuditLog (
    AuditID INT IDENTITY(1,1) PRIMARY KEY,
    TableName NVARCHAR(50) NOT NULL,
    OperationType NVARCHAR(10) NOT NULL CHECK (OperationType IN ('INSERT', 'UPDATE', 'DEL
    RecordID INT NOT NULL,
    OldValues NVARCHAR(MAX),
    NewValues NVARCHAR(MAX),
    ModifiedBy NVARCHAR(50),
    ModifiedDate DATETIME2 DEFAULT GETDATE()
 );-- =====================================================-- INSERT DEFAULT DATA-- =====================================================-- Insert Account Types
 INSERT INTO AccountTypes (TypeName, Description, MinimumBalance, InterestRate) VALUES
 ('Savings', 'Standard Savings Account', 100.00, 0.0150),
 ('Checking', 'Standard Checking Account', 25.00, 0.0050),
 ('Business', 'Business Account', 500.00, 0.0075),
 ('Premium', 'Premium Savings Account', 5000.00, 0.0250);-- Insert Transaction Types
 INSERT INTO TransactionTypes (TypeName, Description, IsDebit) VALUES
 ('Deposit', 'Money deposit into account', 0),
 ('Withdrawal', 'Money withdrawal from account', 1),
('Transfer Out', 'Money transfer to another account', 1),
 ('Transfer In', 'Money transfer from another account', 0),
 ('Interest', 'Interest payment', 0),
 ('Fee', 'Account fee charge', 1);-- =====================================================-- CREATE INDEXES FOR PERFORMANCE-- =====================================================
 CREATE NONCLUSTERED INDEX IX_Customers_Email ON Customers(Email);
 CREATE NONCLUSTERED INDEX IX_Customers_SSN ON Customers(SSN);
 CREATE NONCLUSTERED INDEX IX_Accounts_AccountNumber ON Accounts(AccountNumber);
 CREATE NONCLUSTERED INDEX IX_Accounts_CustomerID ON Accounts(CustomerID);
 CREATE NONCLUSTERED INDEX IX_Transactions_FromAccountID ON Transactions(FromAccountID);
 CREATE NONCLUSTERED INDEX IX_Transactions_ToAccountID ON Transactions(ToAccountID);
 CREATE NONCLUSTERED INDEX IX_Transactions_TransactionDate ON Transactions(TransactionDate
 CREATE NONCLUSTERED INDEX IX_Transactions_TransactionNumber ON Transactions(TransactionNu
 PRINT 'Banking System Database Tables Created Successfully!'
